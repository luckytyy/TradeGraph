<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dsc.mapper.TradeInfoMapper">
    <resultMap id="BaseResultMap" type="com.dsc.model.TradeInfo">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="index_data" jdbcType="INTEGER" property="index"/>
        <result column="block_no" jdbcType="VARCHAR" property="block_no"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="tokenAddr" jdbcType="VARCHAR" property="tokenAddr"/>
        <result column="tokenSymbol" jdbcType="VARCHAR" property="tokenSymbol"/>
        <result column="tokenDecimals" jdbcType="VARCHAR" property="tokenDecimals"/>
        <result column="tradeTimeOther" jdbcType="DATE" property="time"/>
        <result column="txid" jdbcType="VARCHAR" property="txid"/>
        <result column="tokenInfo" jdbcType="VARCHAR" property="tokenInfoStr"/>
        <result column="from_data" jdbcType="VARCHAR" property="from"/>
        <result column="fromAlias" jdbcType="VARCHAR" property="fromAlias"/>
        <result column="to_data" jdbcType="VARCHAR" property="to"/>
        <result column="toAlias" jdbcType="VARCHAR" property="toAlias"/>
        <result column="trade_value" jdbcType="INTEGER" property="value"/>
        <result column="conformations" jdbcType="VARCHAR" property="conformations"/>
    </resultMap>

    <resultMap id="TradeSummaryResultMap" type="com.dsc.model.TradeAgentSummary">
        <result column="tokenAddr" jdbcType="VARCHAR" property="tokenAddr"/>
        <result column="tradeDateStr" jdbcType="VARCHAR" property="tradeDateStr"/>
        <result column="tradeCount" jdbcType="INTEGER" property="tradeCount"/>
    </resultMap>


    <select id="findById" resultType="com.dsc.model.TradeInfo">
        select * from tradeInfo where id = #{id}
    </select>
    <select id="findList" resultMap="BaseResultMap">
        select t.*, trade_time*1000 tradeTimeOther from tradeInfo  t
    </select>
    <insert id="insert" parameterType="com.dsc.model.TradeInfo">
        insert into TradeInfo(index_data,block_no,token,tokenAddr,tokenSymbol,tokenDecimals,trade_time,txid,tokenInfo,
        from_data,fromAlias,to_data,toAlias,trade_value,conformations)
        values (#{index,jdbcType=INTEGER},#{block_no,jdbcType=VARCHAR},#{token,jdbcType=VARCHAR},#{tokenAddr,jdbcType=VARCHAR}
        ,#{tokenSymbol,jdbcType=VARCHAR},#{tokenDecimals,jdbcType=VARCHAR}
        ,#{time,jdbcType=DATE},#{txid,jdbcType=VARCHAR},#{tokenInfoStr,jdbcType=VARCHAR},
        #{from,jdbcType=VARCHAR},#{fromAlias,jdbcType=VARCHAR},#{to,jdbcType=VARCHAR},#{toAlias,jdbcType=VARCHAR}
        ,#{value,jdbcType=INTEGER},#{conformations,jdbcType=VARCHAR})
    </insert>

    <delete id="deleteAll" flushCache="true">
        delete from TradeInfo;
    </delete>

    <select id="getAgentList" parameterType="java.lang.Integer" resultMap="TradeSummaryResultMap">
        select tokenAddr,trade_special_date tradeDateStr,trade_count from (
        select from_data tokenAddr,date(datetime(trade_time,'unixepoch','localtime')) trade_special_date,count(*) trade_count from tradeInfo
        where fromAlias is null and toAlias is null
        group by from_data,date(datetime(trade_time,'unixepoch','localtime'))
        having count(*)>#{threshholdVale,jdbcType=INTEGER}
        union
        select to_data tokenAddr,date(datetime(trade_time,'unixepoch','localtime')) trade_special_date,count(*) trade_count from tradeInfo
        where fromAlias is null and toAlias is null
        group by to_data,date(datetime(trade_time,'unixepoch','localtime'))
        having count(*)>#{threshholdVale,jdbcType=INTEGER} ) A order by trade_count desc;
    </select>
</mapper>